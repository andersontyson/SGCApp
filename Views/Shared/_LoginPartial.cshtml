@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using SGCApp.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
 

<
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.Users
        .Include(u => u.Departament)
        .FirstOrDefaultAsync(u => u.Id == UserManager.GetUserId(User));

        if (user != null)
        {
            var roles = await UserManager.GetRolesAsync(user);
            var role = roles.FirstOrDefault();
            var departmentName = user.Departament != null ? user.Departament.Name : "Sin Departamento";

            <li class="nav-item">
                <a id="manage" class="nav-link text-dark" title="Manage">User: @user.UserName</a>
            </li>
            <li class="nav-item">
                <span class="nav-link text-dark">Depto.: @departmentName</span>
            </li>
            <li class="nav-item">
                <span class="nav-link text-dark">Rol: @role</span>
            </li>
            <li class="nav-item">
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                    <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">
                        <img src="~/images/icons/logout.png" alt="Logout" class="inline w-4 h-4 mr-2" />Cerrar Sesión
                    </button>
                </form>
            </li>
        }
    }
    else
    {
      
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
